(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[6300],{8238:function(){},6300:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return n}}),a(3411);var n=Shopware.Component.wrapComponentConfig({template:'{% block sw_first_run_wizard_paypal_credentials %}\n<div class="sw-first-run-wizard-paypal-credentials">\n    <p class="sw-first-run-wizard-paypal-credentials__headerText">\n        {{ $tc(\'swag-paypal-frw-credentials.textIntroPayPal\') }}\n    </p>\n\n    <template v-if="settingsStore.isLoading">\n        <sw-skeleton-bar />\n        <sw-skeleton-bar />\n        <sw-skeleton-bar />\n    </template>\n\n    <template v-else>\n        <swag-paypal-setting\n            path="SwagPayPal.settings.sandbox"\n            :bordered="false"\n            :disabled="inputsDisabled"\n            @update:value="resetError()"\n        />\n\n        <swag-paypal-onboarding-button\n            v-show="!settingsStore.isSandbox"\n            type="live"\n            :disabled="inputsDisabled"\n        >\n            {{ $tc(\'swag-paypal-frw-credentials.buttonGetCredentials\') }}\n        </swag-paypal-onboarding-button>\n\n        <swag-paypal-onboarding-button\n            v-show="settingsStore.isSandbox"\n            type="sandbox"\n            :disabled="inputsDisabled"\n        >\n            {{ $tc(\'swag-paypal-frw-credentials.buttonGetSandboxCredentials\') }}\n        </swag-paypal-onboarding-button>\n\n        <swag-paypal-setting\n            v-show="!settingsStore.isSandbox"\n            path="SwagPayPal.settings.clientId"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n        <swag-paypal-setting\n            v-show="!settingsStore.isSandbox"\n            path="SwagPayPal.settings.clientSecret"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n        <swag-paypal-setting\n            v-show="!settingsStore.isSandbox"\n            path="SwagPayPal.settings.merchantPayerId"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n\n        <swag-paypal-setting\n            v-show="settingsStore.isSandbox"\n            path="SwagPayPal.settings.clientIdSandbox"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n        <swag-paypal-setting\n            v-show="settingsStore.isSandbox"\n            path="SwagPayPal.settings.clientSecretSandbox"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n        <swag-paypal-setting\n            v-show="settingsStore.isSandbox"\n            path="SwagPayPal.settings.merchantPayerIdSandbox"\n            :disabled="inputsDisabled"\n            :error="error"\n        />\n\n        <sw-switch-field\n            v-model:value="asDefault"\n            :disabled="!hasCredentials || inputsDisabled"\n            :label="$tc(\'swag-paypal-frw-credentials.labelSetDefault\')"\n            :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSetDefault\')"\n        />\n\n        <sw-loader v-if="isLoading" />\n    </template>\n</div>\n{% endblock %}\n',inject:["SwagPaypalPaymentMethodService","SwagPayPalSettingsService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-settings")],data(){return{isLoading:!1,asDefault:!1,error:null}},computed:{buttonConfig(){return this.$super("buttonConfig").map(t=>("next"===t.key&&(t.action=this.onClickNext.bind(this)),t))},hasLiveCredentials(){return!!this.settingsStore.get("SwagPayPal.settings.clientId")&&!!this.settingsStore.get("SwagPayPal.settings.clientSecret")},hasSandboxCredentials(){return!!this.settingsStore.get("SwagPayPal.settings.clientIdSandbox")&&!!this.settingsStore.get("SwagPayPal.settings.clientSecretSandbox")},hasCredentials(){return!this.settingsStore.isSandbox&&this.hasLiveCredentials||this.settingsStore.isSandbox&&this.hasSandboxCredentials},inputsDisabled(){return this.isLoading||this.settingsStore.isLoading||"loading"===this.savingSettings}},watch:{"settingsStore.allConfigs":{deep:!0,handler(){this.resetError()}}},methods:{async onClickNext(){if(!this.hasCredentials)return this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageNoCredentials")}),!0;this.isLoading=!0;let t=(await this.saveSettings())?.null,e=!this.settingsStore.isSandbox&&t?.liveCredentialsChanged||this.settingsStore.isSandbox&&t?.sandboxCredentialsChanged,a=!this.settingsStore.isSandbox&&t?.liveCredentialsValid||this.settingsStore.isSandbox&&t?.sandboxCredentialsValid;if(e||(a=await this.onTest()),this.isLoading=!1,!a)return this.error={detail:this.$tc("swag-paypal-frw-credentials.messageInvalidCredentials"),code:"ASD"},!0;if(this.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),this.asDefault)try{await this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(this.settingsStore.salesChannel)}catch{return!0}return!1},resetError(){this.error=null},async onTest(){let t=this.settingsStore.isSandbox?"Sandbox":"";return this.SwagPayPalSettingsService.testApiCredentials(this.settingsStore.get(`SwagPayPal.settings.clientId${t}`),this.settingsStore.get(`SwagPayPal.settings.clientSecret${t}`),this.settingsStore.get(`SwagPayPal.settings.merchantPayerId${t}`),this.settingsStore.isSandbox).then(t=>t.valid).catch(()=>!1)}}})},3411:function(t,e,a){var n=a(8238);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(534).A)("682884fc",n,!0,{})}}]);