(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[3314],{6527:function(){},3314:function(t,a,n){"use strict";n.r(a),n.d(a,{default:function(){return e}}),n(6696);var e=Shopware.Component.wrapComponentConfig({template:'<div class="swag-paypal-payment-method">\n    <img\n        v-if="paymentMethod.media"\n        class="swag-paypal-payment-method__icon"\n        :src="paymentMethod.media.url"\n        :alt="paymentMethod.media.translated.alt"\n    >\n\n    <div class="swag-paypal-payment-method__name">\n        {{ paymentMethod.translated.name }}\n        <span v-if="isPui">\n            ({{ $t(\'swag-paypal-method.ratePayLabel\') }})\n        </span>\n    </div>\n\n    <sw-skeleton-bar v-if="merchantInformationStore.isLoading" />\n\n    <div v-else class="swag-paypal-payment-method__dynamic">\n        <sw-help-text\n            v-if="availabilityToolTip"\n            :text="availabilityToolTip"\n        />\n\n        <sw-label\n            v-tooltip="{\n                message: onboardingStatusTooltip,\n                position: \'top\',\n                disabled: !onboardingStatusTooltip,\n            }"\n            class="swag-paypal-payment-method__status-label"\n            size="medium"\n            appearance="pill"\n            :variant="statusBadgeVariant"\n            :ghost="false"\n            :caps="false"\n        >\n            <sw-color-badge rounded :variant="statusBadgeVariant" />\n\n            <span>{{ onboardingStatusText }}</span>\n        </sw-label>\n\n        <router-link\n            v-if="showEditLink"\n            class="swag-paypal-payment-method__detail-link"\n            :to="{ name: \'sw.settings.payment.detail\', params: { id: paymentMethod.id } }"\n        >\n            {{ $t(\'swag-paypal-method.editDetail\') }}\n        </router-link>\n    </div>\n\n    <sw-switch-field\n        :label="$t(\'swag-paypal-method.switch.label\')"\n        :disabled="paymentMethodToggleDisabled || !acl.can(\'swag_paypal.editor\')"\n        :value="paymentMethod.active"\n        @update:value="onUpdateActive"\n    />\n\n    <swag-paypal-method-domain-association\n        v-if="identifier === \'applepayhandler\'"\n        :payment-method="paymentMethod"\n    />\n</div>\n',compatConfig:Shopware.compatConfig,inject:["acl","repositoryFactory"],emits:["update:active"],props:{paymentMethod:{type:Object,required:!0}},computed:{merchantInformationStore(){return Shopware.Store.get("swagPayPalMerchantInformation")},onboardingStatus(){return this.merchantInformationStore.capabilities[this.paymentMethod.id]},identifier(){return this.paymentMethod.formattedHandlerIdentifier?.split("_").pop()??""},isPui(){return"puihandler"===this.identifier},paymentMethodToggleDisabled(){return!this.paymentMethod.active&&!this.showEditLink},showEditLink(){return["active","limited","mybank","test"].includes(this.onboardingStatus)},statusBadgeVariant(){switch(this.onboardingStatus){case"active":return"success";case"limited":case"mybank":return"danger";case"inactive":case"ineligible":default:return"neutral";case"test":case"pending":return"info"}},onboardingStatusText(){return this.$t(`swag-paypal-method.onboardingStatusText.${this.onboardingStatus}`)},onboardingStatusTooltip(){let t=`swag-paypal-method.onboardingStatusTooltip.${this.onboardingStatus}`;return this.$te(t)?this.$t(t):null},availabilityToolTip(){let t=`swag-paypal-method.availabilityToolTip.${this.identifier}`;return this.$te(t)?this.$t(t):null}},methods:{onUpdateActive(t){this.paymentMethod.active!==t&&this.$emit("update:active",t)}}})},6696:function(t,a,n){var e=n(6527);e.__esModule&&(e=e.default),"string"==typeof e&&(e=[[t.id,e,""]]),e.locals&&(t.exports=e.locals),(0,n(534).A)("138152ce",e,!0,{})}}]);