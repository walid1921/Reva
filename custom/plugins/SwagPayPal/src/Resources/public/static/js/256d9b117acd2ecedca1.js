(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[4627],{5203:function(){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal",roles:{viewer:{privileges:["sales_channel:read","sales_channel_payment_method:read","system_config:read"],dependencies:[]},editor:{privileges:["sales_channel:update","sales_channel_payment_method:create","sales_channel_payment_method:update","system_config:update","system_config:create","system_config:delete"],dependencies:["swag_paypal.viewer"]}}}),Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:null,key:"sales_channel",roles:{viewer:{privileges:["swag_paypal_pos_sales_channel:read","swag_paypal_pos_sales_channel_run:read","swag_paypal_pos_sales_channel_run:update","swag_paypal_pos_sales_channel_run:create","swag_paypal_pos_sales_channel_run_log:read","sales_channel_payment_method:read"]},editor:{privileges:["swag_paypal_pos_sales_channel:update","swag_paypal_pos_sales_channel_run:delete","payment_method:update"]},creator:{privileges:["swag_paypal_pos_sales_channel:create","payment_method:create","shipping_method:create","delivery_time:create"]},deleter:{privileges:["swag_paypal_pos_sales_channel:delete"]}}})},4627:function(e,a,t){"use strict";t(5203),Shopware.Store.register({id:"swagPayPalMerchantInformation",state:()=>({salesChannel:null,allMerchantInformations:{}}),actions:{set(e,a){this.allMerchantInformations[String(e)]=a},has(e){return this.allMerchantInformations.hasOwnProperty(String(e))},delete(e){delete this.allMerchantInformations[String(e)]}},getters:{isLoading(){return!this.allMerchantInformations.hasOwnProperty(String(this.salesChannel))},actual(){return this.allMerchantInformations[String(this.salesChannel)]??{merchantIntegrations:null,capabilities:{}}},products(){return this.actual.merchantIntegrations?.products??[]},capabilities(){return this.actual.capabilities},merchantCapabilities(){return this.actual.merchantIntegrations?.capabilities??[]},canVault(){return this.merchantCapabilities.some(e=>"PAYPAL_WALLET_VAULTING_ADVANCED"===e.name&&"ACTIVE"===e.status)},canPPCP(){return this.merchantCapabilities.some(e=>"PAYPAL_CHECKOUT"===e.name&&"ACTIVE"===e.status)}}}),Shopware.Store.register({id:"swagPayPalSettings",state:()=>({salesChannel:null,allConfigs:{}}),actions:{setConfig(e,a){this.allConfigs[String(e)]=a},hasConfig(e){return this.allConfigs.hasOwnProperty(String(e))},set(e,a){this.allConfigs[String(this.salesChannel)][e]=a??void 0},get(e){return this.actual[e]??this.root[e]??void 0},getRoot(e){return this.root[e]??void 0},getActual(e){return this.actual[e]??void 0}},getters:{isLoading(){return!this.allConfigs.hasOwnProperty(String(this.salesChannel))},isSandbox(){return this.actual["SwagPayPal.settings.sandbox"]??this.root["SwagPayPal.settings.sandbox"]??!1},root(){return this.allConfigs.null??{}},actual(){return this.allConfigs[String(this.salesChannel)]??{}}}}),Shopware.Component.register("swag-paypal-onboarding-button",()=>t.e(3143).then(t.bind(t,3143))),Shopware.Component.register("swag-paypal-setting",()=>t.e(1341).then(t.bind(t,1341))),Shopware.Vue.watch(()=>Shopware.Store.get("swagPayPalSettings").salesChannel,e=>{Shopware.Store.get("swagPayPalMerchantInformation").salesChannel=e}),Shopware.Vue.watch(()=>Shopware.Store.get("swagPayPalMerchantInformation").salesChannel,e=>{Shopware.Store.get("swagPayPalSettings").salesChannel=e})}}]);