(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[5486],{8650:function(){},3105:function(a,e,n){"use strict";n.r(e),n.d(e,{default:function(){return t}}),n(9737);var t=Shopware.Component.wrapComponentConfig({template:'{% block sw_first_run_wizard_paypal_credentials %}\n<div class="sw-first-run-wizard-paypal-credentials">\n\n    {% block sw_first_run_wizard_paypal_credentials_inner %}\n        <sw-loader v-if="isLoading" />\n\n        {% block sw_first_run_wizard_paypal_credentials_intro %}\n        <p class="sw-first-run-wizard-paypal-credentials__headerText">\n            {{ $tc(\'swag-paypal-frw-credentials.textIntroPayPal\') }}\n        </p>\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_sandbox %}\n        <sw-switch-field\n            v-model:value="config[\'SwagPayPal.settings.sandbox\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelSandbox\')"\n            :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSandbox\')"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_button_container %}\n        <div class="sw-first-run-wizard-paypal-credentials__button-container">\n\n            {% block sw_first_run_wizard_paypal_credentials_button %}\n            <a\n                class="sw-button sw-button--primary swag-paypal-frw__signup-button"\n                target="_blank"\n                :data-paypal-onboard-complete="onboardingCallback"\n                :href="`${onboardingUrl}`"\n                data-paypal-button="true"\n            >\n                {{ $tc(\'swag-paypal-frw-credentials.buttonGetCredentials\') }}\n            </a>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_indicator %}\n            <div class="sw-first-run-wizard-paypal-credentials__indicator">\n                <template v-if="isGetCredentialsSuccessful">\n\n                    {% block sw_first_run_wizard_paypal_credentials_indicator_icon %}\n                    <sw-icon\n                        name="regular-checkmark-s"\n                        class="sw-first-run-wizard-paypal-credentials__icon-successful"\n                    />\n                    {% endblock %}\n\n                    {% block sw_first_run_wizard_paypal_credentials_indicator_text %}\n                    <span class="sw-first-run-wizard-paypal-credentials__text-indicator">\n                        {{ $tc(\'swag-paypal-frw-credentials.textFetchedSuccessful\') }}\n                    </span>\n                    {% endblock %}\n                </template>\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_client_id %}\n        <sw-text-field\n            v-show="!sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.clientId\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelClientId\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_client_secret %}\n        <sw-text-field\n            v-show="!sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.clientSecret\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelClientSecret\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_merchant_id %}\n        <sw-text-field\n            v-show="!sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.merchantPayerId\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelMerchantPayerId\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_client_id_sandbox %}\n        <sw-text-field\n            v-show="sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.clientIdSandbox\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelClientIdSandbox\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_client_secret_sandbox %}\n        <sw-text-field\n            v-show="sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.clientSecretSandbox\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelClientSecretSandbox\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_merchant_id_sandbox %}\n        <sw-text-field\n            v-show="sandboxMode"\n            v-model:value="config[\'SwagPayPal.settings.merchantPayerIdSandbox\']"\n            :label="$tc(\'swag-paypal-frw-credentials.labelMerchantPayerIdSandbox\')"\n            @update:value="onCredentialsChanged"\n        />\n        {% endblock %}\n\n        {% block sw_first_run_wizard_paypal_credentials_set_default %}\n        <sw-switch-field\n            v-model:value="setDefault"\n            :disabled="!credentialsProvided"\n            :label="$tc(\'swag-paypal-frw-credentials.labelSetDefault\')"\n            :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSetDefault\')"\n        />\n        {% endblock %}\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["systemConfigApiService","SwagPaypalPaymentMethodService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-credentials-loader")],data(){return{config:{},isLoading:!1,setDefault:!1}},computed:{sandboxMode(){return this.config["SwagPayPal.settings.sandbox"]||!1},onboardingUrl(){return this.sandboxMode?this.onboardingUrlSandbox:this.onboardingUrlLive},onboardingCallback(){return this.sandboxMode?"onboardingCallbackSandbox":"onboardingCallbackLive"},buttonConfig(){return this.$super("buttonConfig").map(a=>("next"===a.key&&(a.action=this.onClickNext.bind(this)),a))},credentialsProvided(){return!this.sandboxMode&&this.credentialsProvidedLive||this.sandboxMode&&this.credentialsProvidedSandbox},credentialsProvidedLive(){return!!this.config["SwagPayPal.settings.clientId"]&&!!this.config["SwagPayPal.settings.clientSecret"]},credentialsProvidedSandbox(){return!!this.config["SwagPayPal.settings.clientIdSandbox"]&&!!this.config["SwagPayPal.settings.clientSecretSandbox"]}},created(){this.createdComponent()},methods:{createdComponent(){this.$super("createdComponent"),this.fetchPayPalConfig()},onPayPalCredentialsLoadSuccess(a,e,n,t){this.setConfig(a,e,n,t)},onPayPalCredentialsLoadFailed(a){this.setConfig("","","",a),this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageFetchedError"),duration:1e4})},setConfig(a,e,n,t){let i=t?"Sandbox":"";this.$set(this.config,`SwagPayPal.settings.clientId${i}`,a),this.$set(this.config,`SwagPayPal.settings.clientSecret${i}`,e),this.$set(this.config,`SwagPayPal.settings.merchantPayerId${i}`,n)},async onClickNext(){if(!this.credentialsProvided)return this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageNoCredentials")}),!0;try{return this.isGetCredentialsSuccessful||await this.testApiCredentials(),await this.saveConfig(),this.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),!1}catch{return!0}},fetchPayPalConfig(){return this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings",null).then(a=>{this.config=a}).finally(()=>{this.isLoading=!1})},async saveConfig(){this.isLoading=!0,await this.systemConfigApiService.saveValues(this.config,null),this.setDefault&&await this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(),this.isLoading=!1},async testApiCredentials(){this.isLoading=!0;let a=this.config["SwagPayPal.settings.sandbox"]??!1,e=a?"Sandbox":"",n=this.config[`SwagPayPal.settings.clientId${e}`],t=this.config[`SwagPayPal.settings.clientSecret${e}`],i=await this.SwagPayPalApiCredentialsService.validateApiCredentials(n,t,a).catch(a=>(this.createNotificationFromError({errorResponse:a,title:"swag-paypal.settingForm.messageTestError"}),{credentialsValid:!1}));return this.isLoading=!1,i.credentialsValid?Promise.resolve():Promise.reject()},onCredentialsChanged(){this.isGetCredentialsSuccessful=null}}})},9737:function(a,e,n){var t=n(8650);t.__esModule&&(t=t.default),"string"==typeof t&&(t=[[a.id,t,""]]),t.locals&&(a.exports=t.locals),(0,n(534).A)("67bf56e4",t,!0,{})}}]);