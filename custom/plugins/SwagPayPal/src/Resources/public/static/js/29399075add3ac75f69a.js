(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[4602],{2541:function(){},4602:function(a,n,t){"use strict";t.r(n),t.d(n,{default:function(){return s}}),t(7896);let{Context:e}=Shopware,{Criteria:o}=Shopware.Data;var s=Shopware.Component.wrapComponentConfig({template:'<sw-card\n    class="swag-paypal-method-card sw-card--grid"\n    position-identifier="swag-paypal-method-card"\n>\n    <template #avatar>\n        <img\n            :src="assetFilter(\'swagpaypal/static/img/paypal-logo-avatar.svg\')"\n            :alt="$t(\'swag-paypal-method.appImageAlt\')"\n        >\n    </template>\n\n    <template #title>\n        <p class="sw-card__title">\n            {{ $t(\'swag-paypal-method.cardTitle\') }}\n        </p>\n\n        <sw-label\n            v-if="!merchantInformationStore.isLoading"\n            class="swag-paypal-method-card__status"\n            size="medium"\n            appearance="pill"\n            :variant="statusVariant"\n        >\n            <sw-color-badge rounded :variant="statusVariant" />\n\n            <span>{{ statusText }}</span>\n        </sw-label>\n    </template>\n\n    <template #header-right>\n        <sw-internal-link :router-link="{ name: \'swag.paypal.settings.index\' }">\n            {{ $t(\'swag-paypal-method.settingsLink\') }}\n        </sw-internal-link>\n    </template>\n\n    <div class="swag-paypal-method-card__content">\n        <template v-if="merchantInformationStore.isLoading">\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n        </template>\n\n        <swag-paypal-method-merchant-information\n            v-else-if="showMerchantInformation"\n            @save="saveSettings"\n        >\n            {% block swag_paypal_method_card_onboarding_buttons_connected %}\n            <swag-paypal-onboarding-button\n                type="live"\n                @onboarded="saveSettings"\n            />\n\n            <swag-paypal-onboarding-button\n                type="sandbox"\n                variant="link"\n                @onboarded="saveSettings"\n            />\n            {% endblock %}\n        </swag-paypal-method-merchant-information>\n\n        <template v-else>\n            <div class="swag-paypal-method-card__info">\n                {% block swag_paypal_method_card_info %}\n                <p class="swag-paypal-method-card__header">\n                    {{ $t(\'swag-paypal-method.header\') }}\n                </p>\n\n                <p class="swag-paypal-method-card__description">\n                    {{ $t(\'swag-paypal-method.description\') }}\n                </p>\n                {% endblock %}\n            </div>\n\n            <div class="swag-paypal-method-card__onboarding_buttons">\n                {% block swag_paypal_method_card_onboarding_buttons_disconnected %}\n                <swag-paypal-onboarding-button\n                    type="live"\n                    @onboarded="saveSettings"\n                />\n\n                <swag-paypal-onboarding-button\n                    type="sandbox"\n                    variant="link"\n                    @onboarded="saveSettings"\n                />\n                {% endblock %}\n            </div>\n        </template>\n\n        {% block swag_paypal_method_card_payment_methods %}\n        <p class="swag-paypal-method-card__payment-method-headline">\n            {{ $t(\'swag-paypal-method.paymentMethodText\') }}\n        </p>\n\n        <template v-if="isLoadingPaymentMethods">\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n            <sw-skeleton-bar />\n        </template>\n\n        <div v-else class="swag-paypal-method-card__listing">\n            <swag-paypal-payment-method\n                v-for="paymentMethod in paymentMethods"\n                :key="paymentMethod.id"\n                :payment-method="paymentMethod"\n                @update:active="onUpdateActive(paymentMethod, $event)"\n            />\n        </div>\n        {% endblock %}\n    </div>\n</sw-card>\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory"],mixins:[Shopware.Mixin.getByName("notification"),Shopware.Mixin.getByName("swag-paypal-settings"),Shopware.Mixin.getByName("swag-paypal-merchant-information")],data(){return{isLoadingPaymentMethods:!0,paymentMethods:[]}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},paymentMethodRepository(){return this.repositoryFactory.create("payment_method")},paymentMethodCriteria(){return new o(1,500).addAssociation("media").addFilter(o.equals("plugin.name","SwagPayPal")).addSorting(o.sort("position","ASC"))},merchantStatus(){let a=this.merchantInformationStore.actual.merchantIntegrations;return a?this.merchantInformationStore.canPPCP?a?.primary_email_confirmed?a?.payments_receivable?"connected":"paymentsUnreceivable":"emailUnconfirmed":"onboardingNeeded":"notConnected"},statusVariant(){switch(this.merchantStatus){case"onboardingNeeded":case"notConnected":return"danger";case"emailUnconfirmed":case"paymentsUnreceivable":return"warning";case"connected":return"success"}},statusText(){return this.$t(`swag-paypal-method.merchantStatusText.${this.merchantStatus}`)},showMerchantInformation(){return this.merchantInformationStore.canPPCP}},created(){this.createdComponent()},methods:{createdComponent(){this.fetchPaymentMethods()},async fetchPaymentMethods(){this.isLoadingPaymentMethods=!0;let a=await this.paymentMethodRepository.search(this.paymentMethodCriteria,e.api).catch(()=>[]);this.paymentMethods=a.filter(a=>"handler_swag_pospayment"!==a.formattedHandlerIdentifier&&!(["handler_swag_trustlyapmhandler","handler_swag_giropayapmhandler","handler_swag_sofortapmhandler"].includes(a.formattedHandlerIdentifier??"")&&!a.active)),this.isLoadingPaymentMethods=!1},async onUpdateActive(a,n){a.active=n,await this.paymentMethodRepository.save(a,e.api).then(()=>{this.createNotificationSuccess({message:this.$t(`swag-paypal-method.switch.${a.active?"active":"inactive"}`,{name:a.translated?.name||a.name})})}).catch(()=>{a.active=!n})}}})},7896:function(a,n,t){var e=t(2541);e.__esModule&&(e=e.default),"string"==typeof e&&(e=[[a.id,e,""]]),e.locals&&(a.exports=e.locals),(0,t(534).A)("30b800f6",e,!0,{})}}]);