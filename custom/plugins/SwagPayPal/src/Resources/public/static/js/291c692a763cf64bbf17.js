(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[8038],{9244:function(){},8038:function(a,t,e){"use strict";e.r(t),e.d(t,{default:function(){return i}}),e(3535);let{Context:n}=Shopware,{Criteria:o}=Shopware.Data;var i=Shopware.Component.wrapComponentConfig({template:'{% block swag_paypal_content_card_channel_config_checkout %}\n<sw-card\n    class="sw-card--grid"\n    position-identifier="swag-paypal-checkout"\n    :is-loading="isLoading || isLoadingPaymentMethods"\n    :title="$tc(\'swag-paypal.settingForm.checkout.cardTitle\')"\n>\n    <template #avatar>\n        {% block swag_paypal_content_card_channel_config_checkout_avatar %}\n        <img\n            :src="assetFilter(\'swagpaypal/static/img/paypal-logo-avatar.svg\')"\n            :alt="$tc(\'swag-paypal.settingForm.checkout.appImageAlt\')"\n        >\n        {% endblock %}\n    </template>\n\n    <template #header-right>\n        {% block swag_paypal_content_card_channel_config_checkout_settings_link %}\n        <sw-internal-link :routerLink="{ name: \'swag.paypal.index\' }">\n            {{ $tc(\'swag-paypal.settingForm.checkout.settingsLink\') }}\n        </sw-internal-link>\n        {% endblock %}\n    </template>\n\n    {% block swag_paypal_content_card_channel_config_checkout_container %}\n    <div class="swag-paypal-checkout">\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_box %}\n        <div :class="{\'swag-paypal-checkout__box\': showMerchantInformation }">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_sandbox_switch %}\n            <swag-paypal-inherit-wrapper\n                v-if="showSandboxToggle"\n                v-bind="{ actualConfigData, allConfigs, selectedSalesChannelId }"\n                path="SwagPayPal.settings.sandbox"\n                class="swag-paypal-checkout__sandbox-toggle"\n            >\n                <template #content="props">\n                    <sw-switch-field\n                        v-tooltip.left="{\n                            message: isSandbox ? $tc(\'swag-paypal.settingForm.checkout.sandbox.onlySandboxTooltip\') : $tc(\'swag-paypal.settingForm.checkout.sandbox.onlyLiveTooltip\'),\n                            disabled: !sandboxToggleDisabled,\n                        }"\n                        name="SwagPayPal.settings.sandbox"\n                        :mapInheritance="props"\n                        :label="$tc(\'swag-paypal.settingForm.checkout.sandbox.label\')"\n                        :helpText="$tc(\'swag-paypal.settingForm.checkout.sandbox.helpText\')"\n                        :disabled="sandboxToggleDisabled || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                        :value="props.currentValue"\n                        @update:value="props.updateCurrentValue"\n                    />\n                </template>\n            </swag-paypal-inherit-wrapper>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_header %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__header"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.header\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_description %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__description"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.description\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_banner %}\n            <sw-alert\n                v-if="!isOnboardingPPCPFinished"\n                variant="info"\n                class="swag-paypal-checkout__banner"\n            >\n                <span v-html="$tc(\'swag-paypal.settingForm.checkout.banner\')" />\n            </sw-alert>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_merchant_information %}\n            <p\n                v-if="showMerchantInformation"\n                class="swag-paypal-checkout__merchant-information"\n            >\n                {{ merchantEmail }}\n                <br>\n                {{ merchantInformation.merchantIntegrations.legal_name }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_onboarding %}\n                {% block swag_paypal_content_card_channel_config_checkout_container_onboarding_button %}\n                <a\n                    class="sw-button sw-button--ghost"\n                    target="_blank"\n                    :href="onboardingUrlLive"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackLive"\n                    data-paypal-button="true"\n                >\n                    {{ liveButtonTitle }}\n                </a>\n                <a\n                    class="swag-paypal-checkout__button-onboarding-sandbox"\n                    target="_blank"\n                    :href="onboardingUrlSandbox"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackSandbox"\n                    data-paypal-button="true"\n                >\n                    {{ sandboxButtonTitle }}\n                </a>\n                {% endblock %}\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods %}\n        <p class="swag-paypal-checkout__payment-method-headline">\n            {{ $tc(\'swag-paypal.settingForm.checkout.paymentMethodText\') }}\n        </p>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items %}\n        <div class="swag-paypal-checkout-payment-method_container">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item %}\n            <swag-paypal-checkout-method\n                v-for="paymentMethod in paymentMethods"\n                :key="paymentMethod.id"\n                :payment-method="paymentMethod"\n                :onboarding-status="onboardingStatus(paymentMethod)"\n                :actual-config-data="actualConfigData"\n            />\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_credentials_slot %}\n        <slot name="credentials" />\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n    {% block sw_deactivate_paypal_plus_modal %}\n    <sw-modal\n        v-if="plusDeprecationModalOpen"\n        class="swag-paypal-checkout-modal"\n        :title="$tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.title\')"\n        variant="default"\n        @modal-close="closeModal"\n    >\n        {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n        {% block sw_deactivate_paypal_plus_modal_text %}\n        <p class="swag-paypal-checkout-modal__text">\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.text\') }}\n        </p>\n        {% endblock %}\n\n        {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n        {% block sw_deactivate_paypal_plus_modal_warning %}\n        <sw-alert\n            class="swag-paypal-checkout-modal__warning"\n            variant="warning"\n        >\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.warning\') }}\n        </sw-alert>\n        {% endblock %}\n\n        {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n        {% block sw_deactivate_paypal_plus_modal_footer %}\n        <template #modal-footer>\n            {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n            {% block sw_deactivate_paypal_plus_modal_cancel_button %}\n            <sw-button @click="closeModal">\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.cancel\') }}\n            </sw-button>\n            {% endblock %}\n\n            {# @deprecated tag:v10.0.0 - will be removed without replacement #}\n            {% block ssw_deactivate_paypal_plus_modal_confirm_button %}\n            <sw-button\n                variant="primary"\n                @click="deactivatePayPalPlus"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.deactivate\') }}\n            </sw-button>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["acl","repositoryFactory","SwagPayPalApiCredentialsService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-credentials-loader")],props:{actualConfigData:{type:Object,required:!0,default:()=>({})},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},clientIdErrorState:{type:Object,required:!1,default:null},clientSecretErrorState:{type:Object,required:!1,default:null},clientIdSandboxErrorState:{type:Object,required:!1,default:null},clientSecretSandboxErrorState:{type:Object,required:!1,default:null},clientIdFilled:{type:Boolean,required:!1,default:!1},clientSecretFilled:{type:Boolean,required:!1,default:!1},clientIdSandboxFilled:{type:Boolean,required:!1,default:!1},clientSecretSandboxFilled:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0}},data(){return{paymentMethods:[],merchantInformation:{merchantIntegrations:{legalName:null,primaryEmail:null},capabilities:{}},plusDeprecationModalOpen:!1,showHintMerchantIdMustBeEnteredManually:!1,isLoadingPaymentMethods:!1}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},paymentMethodRepository(){return this.repositoryFactory.create("payment_method")},paymentMethodCriteria(){let a=new o(1,500);return a.addAssociation("media"),a.addFilter(o.equals("plugin.name","SwagPayPal")),a.addSorting(o.sort("position","ASC"),!0),a},isLive(){return!this.isSandbox},isSandbox(){return this.actualConfigData["SwagPayPal.settings.sandbox"]??!1},liveButtonTitle(){return this.actualConfigData["SwagPayPal.settings.clientSecret"]?this.isSandbox?this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.some(a=>"active"!==this.onboardingStatus(a))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.liveTitle")},sandboxButtonTitle(){return this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]?this.isLive?this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.find(a=>"active"!==this.onboardingStatus(a))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.sandboxTitle")},sandboxToggleDisabled(){return(!this.actualConfigData["SwagPayPal.settings.clientSecret"]&&!!this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isSandbox||!!this.actualConfigData["SwagPayPal.settings.clientSecret"]&&!this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isLive)&&!this.selectedSalesChannelId},isOnboardingPPCPFinished(){let a=this.paymentMethods.find(a=>"handler_swag_sepahandler"===a.formattedHandlerIdentifier);return!!a&&"active"===this.onboardingStatus(a)},showMerchantInformation(){return this.isOnboardingPPCPFinished},showSandboxToggle(){return this.actualConfigData["SwagPayPal.settings.clientSecret"]||this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]||this.selectedSalesChannelId},merchantEmail(){return this.merchantInformation.merchantIntegrations.primary_email??this.merchantInformation.merchantIntegrations.tracking_id}},watch:{isSandbox(){this.$emit("on-save-settings")},isOnboardingPPCPFinished(){let a=this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"];a&&(this.plusDeprecationModalOpen=a&&this.isOnboardingPPCPFinished)}},created(){this.createdComponent()},methods:{createdComponent(){this.getPaymentMethodsAndMerchantIntegrations()},deactivatePayPalPlus(){this.$set(this.actualConfigData,"SwagPayPal.settings.plusCheckoutEnabled",!1),this.$set(this.actualConfigData,"SwagPayPal.settings.merchantLocation","other"),this.$set(this.actualConfigData,"SwagPayPal.settings.spbAlternativePaymentMethodsEnabled",!1),this.$emit("on-deactivate-paypal-plus"),this.plusDeprecationModalOpen=!1},async getPaymentMethodsAndMerchantIntegrations(){this.isLoadingPaymentMethods=!0,await Promise.all([this.fetchMerchantIntegrations(),this.getPaymentMethods()]),this.isLoadingPaymentMethods=!1},async getPaymentMethods(){let a=await this.paymentMethodRepository.search(this.paymentMethodCriteria,n.api);this.paymentMethods=a.filter(a=>"handler_swag_pospayment"!==a.formattedHandlerIdentifier&&!(["handler_swag_trustlyapmhandler","handler_swag_giropayapmhandler","handler_swag_sofortapmhandler"].includes(a.formattedHandlerIdentifier??"")&&!a.active))},fetchMerchantIntegrations(){return this.SwagPayPalApiCredentialsService.getMerchantInformation(this.selectedSalesChannelId).then(a=>{this.merchantInformation=a,this.merchantIntegrations=a.capabilities}).catch(a=>{this.createNotificationFromError({errorResponse:a})})},onboardingStatus(a){return this.merchantInformation.capabilities[a.id]},async onChangePaymentMethodActive(a){a.active=!a.active,await this.paymentMethodRepository.save(a,n.api);let t=a.active?"active":"inactive";this.createNotificationSuccess({message:this.$tc(`swag-paypal.settingForm.checkout.paymentMethodStatusChangedSuccess.${t}`,0,{name:a.name})})},closeModal(){this.plusDeprecationModalOpen=!1},onPayPalCredentialsLoadSuccess(a,t,e,n){this.setConfig(a,t,e,n),this.$emit("on-save-settings")},onPayPalCredentialsLoadFailed(a){this.setConfig("","","",a),this.createNotificationError({message:this.$tc("swag-paypal.settingForm.credentials.button.messageFetchedError"),duration:1e4})},setConfig(a,t,e,n){let o=n?"Sandbox":"";this.$set(this.actualConfigData,`SwagPayPal.settings.clientId${o}`,a),this.$set(this.actualConfigData,`SwagPayPal.settings.clientSecret${o}`,t),this.$set(this.actualConfigData,`SwagPayPal.settings.merchantPayerId${o}`,e)},checkBoolFieldInheritance(a){return"boolean"!=typeof a}}})},3535:function(a,t,e){var n=e(9244);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[a.id,n,""]]),n.locals&&(a.exports=n.locals),(0,e(534).A)("3fe59b27",n,!0,{})}}]);