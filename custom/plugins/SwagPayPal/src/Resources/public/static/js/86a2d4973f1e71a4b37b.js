(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[8134],{4412:function(){},8134:function(a,n,t){"use strict";t.r(n),t.d(n,{default:function(){return e}}),t(955);var e=Shopware.Component.wrapComponentConfig({template:'{% block swag_paypal_content_card_channel_config_vaulting %}\n<sw-card\n    positionIdentifier="swag-paypal-card-channel-config-vaulting"\n    :title="$tc(\'swag-paypal.settingForm.vaulting.cardTitle\')"\n    class="swag-paypal-vaulting"\n    :is-loading="isLoadingMerchantInformation"\n    help-text="test"\n>\n    {% block swag_paypal_content_card_channel_config_vaulting_settings %}\n    <div v-if="actualConfigData" class="swag-paypal-settings-vaulting">\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_description_title %}\n        <div class="swag-paypal-settings-vaulting-description-title">\n            {{ $tc(\'swag-paypal.settingForm.vaulting.description.title\') }}\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_description_text %}\n        <div>\n            {{ $tc(\'swag-paypal.settingForm.vaulting.description.text\') }}\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_wallet %}\n        <swag-paypal-inherit-wrapper\n            v-if="canHandleVaulting && !isLoadingMerchantInformation"\n            v-bind="{ actualConfigData, allConfigs, selectedSalesChannelId }"\n            path="SwagPayPal.settings.vaultingEnabledWallet"\n        >\n            <template #content="props">\n                <sw-switch-field\n                    name="SwagPayPal.settings.vaultingEnabledWallet"\n                    bordered\n                    :mapInheritance="props"\n                    :label="$tc(\'swag-paypal.settingForm.vaulting.enableWallet.label\')"\n                    :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                    :value="props.currentValue"\n                    @update:value="props.updateCurrentValue"\n                />\n            </template>\n        </swag-paypal-inherit-wrapper>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_acdc %}\n        <swag-paypal-inherit-wrapper\n            v-if="canHandleVaulting && !isLoadingMerchantInformation"\n            v-bind="{ actualConfigData, allConfigs, selectedSalesChannelId }"\n            path="SwagPayPal.settings.vaultingEnabledACDC"\n        >\n            <template #content="props">\n                <sw-switch-field\n                    name="SwagPayPal.settings.vaultingEnabledACDC"\n                    bordered\n                    :mapInheritance="props"\n                    :label="$tc(\'swag-paypal.settingForm.vaulting.enableACDC.label\')"\n                    :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                    :value="props.currentValue"\n                    @update:value="props.updateCurrentValue"\n                />\n            </template>\n        </swag-paypal-inherit-wrapper>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_venmo %}\n        <swag-paypal-inherit-wrapper\n            v-if="canHandleVaulting && !isLoadingMerchantInformation"\n            v-bind="{ actualConfigData, allConfigs, selectedSalesChannelId }"\n            path="SwagPayPal.settings.vaultingEnabledVenmo"\n        >\n            <template #content="props">\n                <sw-switch-field\n                    name="SwagPayPal.settings.vaultingEnabledVenmo"\n                    bordered\n                    :mapInheritance="props"\n                    :label="$tc(\'swag-paypal.settingForm.vaulting.enableVenmo.label\')"\n                    :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                    :value="props.currentValue"\n                    @update:value="props.updateCurrentValue"\n                />\n            </template>\n        </swag-paypal-inherit-wrapper>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_vaulting_settings_onboarding %}\n        <div v-if="!canHandleVaulting && !isLoadingMerchantInformation">\n            {% block swag_paypal_content_card_channel_config_vaulting_settings_onboarding_button %}\n            <a\n                v-show="!isSandbox"\n                class="sw-button sw-button--ghost swag-paypal-settings-vaulting-activate-button"\n                target="_blank"\n                :href="onboardingUrlLive"\n                :disabled="!acl.can(\'swag_paypal.editor\')"\n                data-paypal-onboard-complete="onboardingCallbackLive"\n                data-paypal-button="true"\n            >\n                {{ $tc(\'swag-paypal.settingForm.vaulting.activateButton.label\') }}\n            </a>\n            <a\n                v-show="isSandbox"\n                class="sw-button sw-button--ghost swag-paypal-settings-vaulting-activate-button"\n                target="_blank"\n                :href="onboardingUrlSandbox"\n                :disabled="!acl.can(\'swag_paypal.editor\')"\n                data-paypal-onboard-complete="onboardingCallbackSandbox"\n                data-paypal-button="true"\n            >\n                {{ $tc(\'swag-paypal.settingForm.vaulting.activateButton.label\') }}\n            </a>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["acl","SwagPayPalApiCredentialsService"],mixins:[Shopware.Mixin.getByName("swag-paypal-notification"),Shopware.Mixin.getByName("swag-paypal-credentials-loader")],props:{actualConfigData:{type:Object,required:!0,default:()=>({})},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},isSaveSuccessful:{type:Boolean,required:!0}},data(){return{merchantInformation:null,isLoadingMerchantInformation:!1}},computed:{isSandbox(){return this.actualConfigData["SwagPayPal.settings.sandbox"]},canHandleVaulting(){return this.merchantInformation?.merchantIntegrations?.capabilities?.some(a=>a?.name==="PAYPAL_WALLET_VAULTING_ADVANCED"&&a?.status==="ACTIVE")}},watch:{isSaveSuccessful(a){!1!==a&&this.createdComponent()}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoadingMerchantInformation=!0,await this.fetchMerchantInformation(),this.isLoadingMerchantInformation=!1},async fetchMerchantInformation(){this.merchantInformation=await this.SwagPayPalApiCredentialsService.getMerchantInformation(this.selectedSalesChannelId).catch(a=>(this.createNotificationFromError({errorResponse:a}),null))},checkBoolFieldInheritance(a){return"boolean"!=typeof a}}})},955:function(a,n,t){var e=t(4412);e.__esModule&&(e=e.default),"string"==typeof e&&(e=[[a.id,e,""]]),e.locals&&(a.exports=e.locals),(0,t(534).A)("81acae06",e,!0,{})}}]);