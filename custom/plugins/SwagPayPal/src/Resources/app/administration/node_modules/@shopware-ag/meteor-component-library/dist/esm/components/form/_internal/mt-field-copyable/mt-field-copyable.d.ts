declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    copyableText: {
        type: StringConstructor;
        required: false;
        default: null;
    };
    tooltip: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>, {
    copyToClipboard: () => void;
    tooltipText: import('vue').ComputedRef<string>;
    wasCopied: import('vue').Ref<boolean, boolean>;
}, {}, {}, {}, import('vue').DefineComponent<{}, {}, {}, {}, {
    createNotification(): void;
    createNotificationSuccess(config: any): void;
    createNotificationInfo(config: any): void;
    createNotificationWarning(config: any): void;
    createNotificationError(config: any): void;
    createSystemNotificationSuccess(config: any): void;
    createSystemNotificationInfo(config: any): void;
    createSystemNotificationWarning(config: any): void;
    createSystemNotificationError(config: any): void;
    createSystemNotification(config: any): void;
}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    copyableText: {
        type: StringConstructor;
        required: false;
        default: null;
    };
    tooltip: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>> & Readonly<{}>, {
    tooltip: boolean;
    copyableText: string;
}, {}, {
    "mt-icon": import('vue').DefineComponent<{
        name: string;
        color?: string;
        decorative?: boolean;
        size?: string;
    }, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{
        name: string;
        color?: string;
        decorative?: boolean;
        size?: string;
    }> & Readonly<{}>, {
        decorative: boolean;
        size: string;
    }, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
}, {
    tooltip: import('vue').ObjectDirective<any, any, string, string>;
}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
