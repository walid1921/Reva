var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./Criteria"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const Criteria_1 = __importStar(require("./Criteria"));
    describe('Test Criteria class', () => {
        it('should default to page===1 & limit===0', () => {
            const criteria = new Criteria_1.default();
            expect(criteria.getLimit()).toBe(0);
            expect(criteria.getPage()).toBe(1);
        });
        it('should respect altered default values', () => {
            (0, Criteria_1.setDefaultValues)({ limit: 42 });
            const criteria = new Criteria_1.default();
            expect(criteria.getLimit()).toBe(42);
            expect(criteria.getPage()).toBe(1);
        });
        it('should able to add a title', () => {
            const criteria = new Criteria_1.default();
            expect(criteria.getTitle()).toBe(null);
            criteria.setTitle('foo');
            expect(criteria.getTitle()).toBe('foo');
        });
    });
});
//# sourceMappingURL=Criteria.spec.js.map