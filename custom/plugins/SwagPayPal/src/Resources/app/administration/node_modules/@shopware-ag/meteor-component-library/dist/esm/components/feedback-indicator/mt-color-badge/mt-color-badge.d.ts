export type MtColorBadgeVariant = "default" | "warning" | "critical" | "positive" | "info";
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    variant: {
        type: StringConstructor;
        required: false;
        default: string;
        validator(value: MtColorBadgeVariant): boolean;
    };
    color: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    hasText: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>, {}, {}, {
    colorStyle(): string;
    variantClass(): Record<string, boolean>;
}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    variant: {
        type: StringConstructor;
        required: false;
        default: string;
        validator(value: MtColorBadgeVariant): boolean;
    };
    color: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    rounded: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    hasText: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>> & Readonly<{}>, {
    color: string;
    variant: string;
    rounded: boolean;
    hasText: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
